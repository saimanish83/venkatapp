{"ast":null,"code":"var _jsxFileName = \"/Users/saimanishsagarvavilala/Desktop/react-test/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Person from './Person/Person.js';\nimport Manish from \"./Person/Button.js\";\nimport Number from \"./Person/Spread.js\";\nimport Container from \"./Person/container.js\";\nimport Slider from './Person/conditions.js';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Car extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nameofcontainer: [{\n        name: \"manish\"\n      }, {\n        name: \"vardhan\"\n      }, {\n        name: \"cruse\"\n      }],\n      showState: false\n    };\n\n    this.switchHandler = newName => {\n      // console.log('was clicked'); \n      this.setState({\n        nameofcontainer: [{\n          name: newName\n        }, {\n          name: \"vardhan\"\n        }, {\n          name: \"cruse vavilala\"\n        }]\n      });\n    };\n\n    this.nameChangeHandler1 = event => {\n      this.setState({\n        nameofcontainer: [{\n          name: event.target.value\n        }, {\n          name: \"cruse\"\n        }, {\n          name: \"sai\"\n        }]\n      });\n    };\n\n    this.nameChangeHandler2 = event => {\n      this.setState({\n        nameofcontainer: [{\n          name: \"sai\"\n        }, {\n          name: event.target.value\n        }, {\n          name: \"vavilala\"\n        }]\n      });\n    };\n\n    this.nameChangeHandler3 = event => {\n      this.setState({\n        nameofcontainer: [{\n          name: \"sai\"\n        }, {\n          name: \"vavilala\"\n        }, {\n          name: event.target.value\n        }]\n      });\n    };\n\n    this.toggleHandler = () => {\n      const show = this.setState.showState;\n      this.setState({\n        showState: !show\n      });\n      this.myFunction(); //   confirm(\"Press a button!\");\n      // myFunction();\n    };\n  }\n\n  myFunction() {\n    var person = prompt(\"Please enter your name\", \"Harry Potter\");\n\n    if (person != null) {\n      document.getElementById(\"demo\").innerHTML = \"Hello \" + person + \"! How are you today?\";\n    }\n  } // myFunctionHandler = () => {\n  //   var txt;\n  //   if (confirm(\"Press a button!\")) {\n  //     txt = \"You pressed OK!\";\n  //   } else {\n  //     txt = \"You pressed Cancel!\";\n  //   }\n  // }\n\n\n  render() {\n    const style = {\n      backgroundColor: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\",\n      marginLeft: \"650px\",\n      marginTop: \"25px\"\n    };\n    let slider = null;\n\n    if (this.state.showState) {\n      slider = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          name: this.state.nameofcontainer[0].name,\n          click: this.switchHandler,\n          changed: this.nameChangeHandler1,\n          children: \"this is slider part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          name: this.state.nameofcontainer[1].name,\n          click: this.switchHandler,\n          changed: this.nameChangeHandler2,\n          children: \"this is slider part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          name: this.state.nameofcontainer[2].name,\n          changed: this.nameChangeHandler3,\n          children: \"this is slider part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this);\n      console.log(\"sucess\");\n    } else {\n      console.log('vardhan');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: style,\n        onClick: this.toggleHandler,\n        children: \"toggle  containers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), slider, /*#__PURE__*/_jsxDEV(Manish, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Car;","map":{"version":3,"sources":["/Users/saimanishsagarvavilala/Desktop/react-test/src/App.js"],"names":["React","Person","Manish","Number","Container","Slider","ReactDOM","Car","Component","state","nameofcontainer","name","showState","switchHandler","newName","setState","nameChangeHandler1","event","target","value","nameChangeHandler2","nameChangeHandler3","toggleHandler","show","myFunction","person","prompt","document","getElementById","innerHTML","render","style","backgroundColor","font","border","padding","cursor","marginLeft","marginTop","slider","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Person from './Person/Person.js';\nimport Manish  from \"./Person/Button.js\";\nimport Number from \"./Person/Spread.js\";\nimport Container from \"./Person/container.js\";\nimport Slider from './Person/conditions.js';\nimport ReactDOM from 'react-dom';\n\n\n\nclass Car extends React.Component {\n state = {\n  nameofcontainer : [ \n    {name:\"manish\"},\n    {name:\"vardhan\"},\n    {name:\"cruse\"}\n\n  ],\n  showState: false\n }\n \n switchHandler = (newName) => {\n  // console.log('was clicked'); \n  this.setState( {\n    nameofcontainer : [ \n      {name: newName },\n      {name:\"vardhan\"},\n      {name:\"cruse vavilala\"}\n\n  \n    ]\n  } )\n }\n nameChangeHandler1 = (event) => {\n  this.setState( {\n    nameofcontainer : [ \n      {name:event.target.value},\n      {name: \"cruse\"},\n      {name:\"sai\"}\n  \n    ]\n  } )\n }\n nameChangeHandler2 = (event) => {\n  this.setState( {\n    nameofcontainer : [ \n      {name:\"sai\"},\n      {name: event.target.value},\n      {name:\"vavilala\"}\n  \n    ]\n  } )\n }\n nameChangeHandler3 = (event) => {\n  this.setState( {\n    nameofcontainer : [ \n      {name:\"sai\"},\n      {name: \"vavilala\"},\n      {name:event.target.value}\n  \n    ]\n  } )\n }\n toggleHandler= () => {\n    const show = this.setState.showState;\n    this.setState({showState : !show});\n    this.myFunction();\n  //   confirm(\"Press a button!\");\n  // myFunction();\n }\n\n myFunction() {\n  var person = prompt(\"Please enter your name\", \"Harry Potter\");\n  if (person != null) {\n    document.getElementById(\"demo\").innerHTML =\n    \"Hello \" + person + \"! How are you today?\";\n  }\n}\n\n// myFunctionHandler = () => {\n//   var txt;\n//   if (confirm(\"Press a button!\")) {\n//     txt = \"You pressed OK!\";\n//   } else {\n//     txt = \"You pressed Cancel!\";\n//   }\n\n// }\n\n  render() {\n    const style = {\n      backgroundColor : \"white\",\n      font : \"inherit\",\n      border : \"1px solid blue\",\n      padding : \"8px\",\n      cursor : \"pointer\",\n      marginLeft: \"650px\",\n      marginTop: \"25px\",\n    };\n    let slider = null;\n    if(this.state.showState ) {\n      slider = (\n        <div>\n        \n        <Container \n        name= {this.state.nameofcontainer[0].name}\n        click = {this.switchHandler}\n        changed= {this.nameChangeHandler1} >this is slider part\n        </Container>\n\n        <Container \n        name= {this.state.nameofcontainer[1].name} \n        click = {this.switchHandler}\n        changed= {this.nameChangeHandler2}>this is slider part\n        </Container>\n\n        <Container \n          name = {this.state.nameofcontainer[2].name}\n        changed= {this.nameChangeHandler3}>this is slider part\n        </Container> \n        </div> \n      );\n      \n      console.log(\"sucess\");\n        \n    } else {\n      console.log('vardhan');\n      \n    }\n\n    return (\n      <div className = 'App'>\n        {/* this is header */}\n        <Person  />\n        {/* this is header */}\n\n      <button style={style} onClick = {this.toggleHandler }>toggle  containers</button>\n        <p id = \"demo\"></p> \n          {slider}\n             \n           \n            <Manish > </Manish>\n      </div>\n    );\n    \n  }\n}\n\nexport default Car;\n\n"]},"metadata":{},"sourceType":"module"}